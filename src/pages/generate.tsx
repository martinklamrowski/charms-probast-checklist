import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";

import { signIn, signOut, useSession } from "next-auth/react";
import { useState } from "react";
import { api } from "~/utils/api";
import { useBuyCredits } from "~/hooks/useBuyCredits";

import { Input } from "~/components/Input";
import { FormGroup } from "~/components/FormGroup";
import { Button } from "~/components/Button";

const GeneratePage: NextPage = () => {

  const { buyCredits } = useBuyCredits();

  const [form, setForm] = useState({
    prompt: ""
  });
  const [imageURL, setImageURL] = useState("");

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data) {
      if (!data.imageURL) return;
      setImageURL(data.imageURL);
    }
  });

  function handleFormSubmit(event: React.FormEvent): void {
    event.preventDefault();
    generateIcon.mutate({
      prompt: form.prompt,
    });
    setForm({ prompt: "" });
  }

  function updateForm(key: string) {
    return function (event: React.ChangeEvent<HTMLInputElement>): void {
      setForm((prev) => ({
        ...prev,
        [key]: event.target.value,
      }))

    }
  }

  const session = useSession();

  const isLoggedIn = !!session.data;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col justify-center items-center">
        {!isLoggedIn &&
          <Button onClick={() => {
            signIn().catch(console.error);
          }}>
            LOGIN
          </Button>
        }
        {isLoggedIn &&
          <>
            <Button
              onClick={() => {
                buyCredits().catch(console.error);
              }}
            >
              Buy Credits
            </Button>
            <Button onClick={() => {
              signOut().catch(console.error);
            }}>
              LOGOUT
            </Button>
          </>
        }
        {session.data?.user.name}


        <form className="flex flex-col gap-4"
          onSubmit={handleFormSubmit}
        >
          <FormGroup>
            <label>Prompt</label>
            <Input
              value={form.prompt}
              onChange={updateForm("prompt")}
            >
            </Input>
          </FormGroup>
          <Button>
            SUBMIT
          </Button>
        </form>
        <Image
          src={imageURL}
          alt="Open AI Generated Image"
          height="100"
          width="100"
        />
      </main>
    </>
  );
};

export default GeneratePage;
